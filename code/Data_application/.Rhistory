# Saving Figure S1
# -----------------------------------------------------------------------------#
plot_tmp <- ggarrange(G_hist,G1_hist,G2_hist,nrow=3,common.legend=TRUE,legend="bottom")
pdf(file = "./FigureS1.pdf", width = 11.5, height = 10.5)
par(mar=c(0,0,0,0))
plot_tmp
dev.off()
#-----------------------------------------------------------------------------#
# Code for producing Figure 6 in Data application section
#-----------------------------------------------------------------------------#
# -----------------------------------------------------------------------------#
# Preparation
# -----------------------------------------------------------------------------#
# Packages required
library(ggplot2)
library(latex2exp)
library(ggpubr)
library(RColorBrewer)
library(reshape2)
# Load data from the previous step
load("./result/result_final_X.RData")
load("./result/result_final_GRIDY.RData")
load("./result/result_final_SCA_P.RData")
load("./result/result_final_GICA.RData")
# -----------------------------------------------------------------------------#
# Creating Figure 6
# -----------------------------------------------------------------------------#
# Making color labels for the ROIs:
color_table <- data.frame(color=c(rep("red",length(which(voxel_name_table$Net=="dfm"))),
rep("blue",length(which(voxel_name_table$Net=="fp"))),
rep("green",length(which(voxel_name_table$Net=="co"))),
rep("purple",length(which(voxel_name_table$Net=="sm"))),
rep("orange",length(which(voxel_name_table$Net=="cb"))),
rep("brown",length(which(voxel_name_table$Net=="oc")))),
ROI=c(which(voxel_name_table$Net=="dfm"),
which(voxel_name_table$Net=="fp"),
which(voxel_name_table$Net=="co"),
which(voxel_name_table$Net=="sm"),
which(voxel_name_table$Net=="cb"),
which(voxel_name_table$Net=="oc")))
color_table <- color_table[c(which(color_table$color=="red"),
which(color_table$color=="blue"),
which(color_table$color=="green"),
which(color_table$color=="purple"),
which(color_table$color=="orange"),
which(color_table$color=="brown")),]
# Computing R2 statistics
R2_group1_GRIDY <- R2_group1_SCA_P <- R2_group1_GICA <- array(NA,dim=c(160,3,length(K1_idx)))
R2_group2_GRIDY <- R2_group2_SCA_P <- R2_group2_GICA <- array(NA,dim=c(160,3,length(K2_idx)))
for (kk in 1:(length(K1_idx)+length(K2_idx))){
X_block <- t(X_scale_ext[[kk]])
GRIDY_joint_factor1 <- GRIDY_refitted$factor_joint[[kk]][,1] %*% t(SCA_PF2_Joint$B[,1])
GRIDY_joint_factor2 <- GRIDY_refitted$factor_joint[[kk]][,2] %*% t(SCA_PF2_Joint$B[,2])
SCA_P_joint_factor1 <- SCA_P_refitted$factor_joint[[kk]][,1] %*% t(SCA_P_Joint$B[,1])
SCA_P_joint_factor2 <- SCA_P_refitted$factor_joint[[kk]][,2] %*% t(SCA_P_Joint$B[,2])
GICA_joint_factor1 <- GICA_refitted$factor_joint[[kk]][,1] %*% t(GICA_Joint$B[,1])
GICA_joint_factor2 <- GICA_refitted$factor_joint[[kk]][,2] %*% t(GICA_Joint$B[,2])
if (kk <= length(K1_idx)){
GRIDY_group_factor <- GRIDY_refitted$factor_group1[[kk]] %*% t(SCA_PF2_Group1$B)
SCA_P_group_factor <- SCA_P_refitted$factor_group1[[kk]] %*% t(SCA_P_Group1$B)
GICA_group_factor <- GICA_refitted$factor_group1[[kk]] %*% t(GICA_Group1$B)
for (i in 1:160){
R2_group1_GRIDY[i,1,kk] <- sum((GRIDY_joint_factor1[,i])^2) / sum((X_block[,i])^2)
R2_group1_GRIDY[i,2,kk] <- sum((GRIDY_joint_factor2[,i])^2) / sum((X_block[,i])^2)
R2_group1_GRIDY[i,3,kk] <- sum((GRIDY_group_factor[,i])^2) / sum((X_block[,i])^2)
R2_group1_SCA_P[i,1,kk] <- sum((SCA_P_joint_factor1[,i])^2) / sum((X_block[,i])^2)
R2_group1_SCA_P[i,2,kk] <- sum((SCA_P_joint_factor2[,i])^2) / sum((X_block[,i])^2)
R2_group1_SCA_P[i,3,kk] <- sum((SCA_P_group_factor[,i])^2) / sum((X_block[,i])^2)
R2_group1_GICA[i,1,kk] <- sum((GICA_joint_factor1[,i])^2) / sum((X_block[,i])^2)
R2_group1_GICA[i,2,kk] <- sum((GICA_joint_factor2[,i])^2) / sum((X_block[,i])^2)
R2_group1_GICA[i,3,kk] <- sum((GICA_group_factor[,i])^2) / sum((X_block[,i])^2)
}
}else{
GRIDY_group_factor <- GRIDY_refitted$factor_group2[[(kk-length(K1_idx))]] %*% t(SCA_PF2_Group2$B)
SCA_P_group_factor <- SCA_P_refitted$factor_group2[[(kk-length(K1_idx))]] %*% t(SCA_P_Group2$B)
GICA_group_factor <- GICA_refitted$factor_group2[[(kk-length(K1_idx))]] %*% t(GICA_Group2$B)
for (i in 1:160){
R2_group2_GRIDY[i,1,(kk-length(K1_idx))] <- sum((GRIDY_joint_factor1[,i])^2) / sum((X_block[,i])^2)
R2_group2_GRIDY[i,2,(kk-length(K1_idx))] <- sum((GRIDY_joint_factor2[,i])^2) / sum((X_block[,i])^2)
R2_group2_GRIDY[i,3,(kk-length(K1_idx))] <- sum((GRIDY_group_factor[,i])^2) / sum((X_block[,i])^2)
R2_group2_SCA_P[i,1,(kk-length(K1_idx))] <- sum((SCA_P_joint_factor1[,i])^2) / sum((X_block[,i])^2)
R2_group2_SCA_P[i,2,(kk-length(K1_idx))] <- sum((SCA_P_joint_factor2[,i])^2) / sum((X_block[,i])^2)
R2_group2_SCA_P[i,3,(kk-length(K1_idx))] <- sum((SCA_P_group_factor[,i])^2) / sum((X_block[,i])^2)
R2_group2_GICA[i,1,(kk-length(K1_idx))] <- sum((GICA_joint_factor1[,i])^2) / sum((X_block[,i])^2)
R2_group2_GICA[i,2,(kk-length(K1_idx))] <- sum((GICA_joint_factor2[,i])^2) / sum((X_block[,i])^2)
R2_group2_GICA[i,3,(kk-length(K1_idx))] <- sum((GICA_group_factor[,i])^2) / sum((X_block[,i])^2)
}
}
}
# Plotting: This produces Figure 6
R2_group1_factor1_GRIDY <- data.frame(t(R2_group1_GRIDY[color_table$ROI,1,]))
R2_group1_factor2_GRIDY <- data.frame(t(R2_group1_GRIDY[color_table$ROI,2,]))
R2_group1_factor3_GRIDY <- data.frame(t(R2_group1_GRIDY[color_table$ROI,3,]))
R2_group2_factor1_GRIDY <- data.frame(t(R2_group2_GRIDY[color_table$ROI,1,]))
R2_group2_factor2_GRIDY <- data.frame(t(R2_group2_GRIDY[color_table$ROI,2,]))
R2_group2_factor3_GRIDY <- data.frame(t(R2_group2_GRIDY[color_table$ROI,3,]))
R2_group1_factor1_SCA_P <- data.frame(t(R2_group1_SCA_P[color_table$ROI,1,]))
R2_group1_factor2_SCA_P <- data.frame(t(R2_group1_SCA_P[color_table$ROI,2,]))
R2_group1_factor3_SCA_P <- data.frame(t(R2_group1_SCA_P[color_table$ROI,3,]))
R2_group2_factor1_SCA_P <- data.frame(t(R2_group2_SCA_P[color_table$ROI,1,]))
R2_group2_factor2_SCA_P <- data.frame(t(R2_group2_SCA_P[color_table$ROI,2,]))
R2_group2_factor3_SCA_P <- data.frame(t(R2_group2_SCA_P[color_table$ROI,3,]))
R2_group1_factor1_GICA <- data.frame(t(R2_group1_GICA[color_table$ROI,1,]))
R2_group1_factor2_GICA <- data.frame(t(R2_group1_GICA[color_table$ROI,2,]))
R2_group1_factor3_GICA <- data.frame(t(R2_group1_GICA[color_table$ROI,3,]))
R2_group2_factor1_GICA <- data.frame(t(R2_group2_GICA[color_table$ROI,1,]))
R2_group2_factor2_GICA <- data.frame(t(R2_group2_GICA[color_table$ROI,2,]))
R2_group2_factor3_GICA <- data.frame(t(R2_group2_GICA[color_table$ROI,3,]))
colnames(R2_group1_factor1_GRIDY) <- color_table$ROI
colnames(R2_group1_factor2_GRIDY) <- color_table$ROI
colnames(R2_group1_factor3_GRIDY) <- color_table$ROI
colnames(R2_group2_factor1_GRIDY) <- color_table$ROI
colnames(R2_group2_factor2_GRIDY) <- color_table$ROI
colnames(R2_group2_factor3_GRIDY) <- color_table$ROI
colnames(R2_group1_factor1_SCA_P) <- color_table$ROI
colnames(R2_group1_factor2_SCA_P) <- color_table$ROI
colnames(R2_group1_factor3_SCA_P) <- color_table$ROI
colnames(R2_group2_factor1_SCA_P) <- color_table$ROI
colnames(R2_group2_factor2_SCA_P) <- color_table$ROI
colnames(R2_group2_factor3_SCA_P) <- color_table$ROI
colnames(R2_group1_factor1_GICA) <- color_table$ROI
colnames(R2_group1_factor2_GICA) <- color_table$ROI
colnames(R2_group1_factor3_GICA) <- color_table$ROI
colnames(R2_group2_factor1_GICA) <- color_table$ROI
colnames(R2_group2_factor2_GICA) <- color_table$ROI
colnames(R2_group2_factor3_GICA) <- color_table$ROI
df_R2_group1_factor1_GRIDY <- melt(R2_group1_factor1_GRIDY)
df_R2_group1_factor2_GRIDY <- melt(R2_group1_factor2_GRIDY)
df_R2_group1_factor3_GRIDY <- melt(R2_group1_factor3_GRIDY)
df_R2_group2_factor1_GRIDY <- melt(R2_group2_factor1_GRIDY)
df_R2_group2_factor2_GRIDY <- melt(R2_group2_factor2_GRIDY)
df_R2_group2_factor3_GRIDY <- melt(R2_group2_factor3_GRIDY)
df_R2_group1_factor1_SCA_P <- melt(R2_group1_factor1_SCA_P)
df_R2_group1_factor2_SCA_P <- melt(R2_group1_factor2_SCA_P)
df_R2_group1_factor3_SCA_P <- melt(R2_group1_factor3_SCA_P)
df_R2_group2_factor1_SCA_P <- melt(R2_group2_factor1_SCA_P)
df_R2_group2_factor2_SCA_P <- melt(R2_group2_factor2_SCA_P)
df_R2_group2_factor3_SCA_P <- melt(R2_group2_factor3_SCA_P)
df_R2_group1_factor1_GICA <- melt(R2_group1_factor1_GICA)
df_R2_group1_factor2_GICA <- melt(R2_group1_factor2_GICA)
df_R2_group1_factor3_GICA <- melt(R2_group1_factor3_GICA)
df_R2_group2_factor1_GICA <- melt(R2_group2_factor1_GICA)
df_R2_group2_factor2_GICA <- melt(R2_group2_factor2_GICA)
df_R2_group2_factor3_GICA <- melt(R2_group2_factor3_GICA)
df_R2_group1_factor1_GRIDY$color <- rep(color_table$color,each=length(K1_idx))
df_R2_group1_factor2_GRIDY$color <- rep(color_table$color,each=length(K1_idx))
df_R2_group1_factor3_GRIDY$color <- rep(color_table$color,each=length(K1_idx))
df_R2_group2_factor1_GRIDY$color <- rep(color_table$color,each=length(K2_idx))
df_R2_group2_factor2_GRIDY$color <- rep(color_table$color,each=length(K2_idx))
df_R2_group2_factor3_GRIDY$color <- rep(color_table$color,each=length(K2_idx))
df_R2_group1_factor1_SCA_P$color <- rep(color_table$color,each=length(K1_idx))
df_R2_group1_factor2_SCA_P$color <- rep(color_table$color,each=length(K1_idx))
df_R2_group1_factor3_SCA_P$color <- rep(color_table$color,each=length(K1_idx))
df_R2_group2_factor1_SCA_P$color <- rep(color_table$color,each=length(K2_idx))
df_R2_group2_factor2_SCA_P$color <- rep(color_table$color,each=length(K2_idx))
df_R2_group2_factor3_SCA_P$color <- rep(color_table$color,each=length(K2_idx))
df_R2_group1_factor1_GICA$color <- rep(color_table$color,each=length(K1_idx))
df_R2_group1_factor2_GICA$color <- rep(color_table$color,each=length(K1_idx))
df_R2_group1_factor3_GICA$color <- rep(color_table$color,each=length(K1_idx))
df_R2_group2_factor1_GICA$color <- rep(color_table$color,each=length(K2_idx))
df_R2_group2_factor2_GICA$color <- rep(color_table$color,each=length(K2_idx))
df_R2_group2_factor3_GICA$color <- rep(color_table$color,each=length(K2_idx))
df_R2_group1_factor1_GRIDY <- df_R2_group1_factor1_GRIDY[-which(is.infinite(df_R2_group1_factor1_GRIDY$value)),]
df_R2_group1_factor2_GRIDY <- df_R2_group1_factor2_GRIDY[-which(is.infinite(df_R2_group1_factor2_GRIDY$value)),]
df_R2_group1_factor3_GRIDY <- df_R2_group1_factor3_GRIDY[-which(is.infinite(df_R2_group1_factor3_GRIDY$value)),]
df_R2_group2_factor1_GRIDY <- df_R2_group2_factor1_GRIDY[-which(is.infinite(df_R2_group2_factor1_GRIDY$value)),]
df_R2_group2_factor2_GRIDY <- df_R2_group2_factor2_GRIDY[-which(is.infinite(df_R2_group2_factor2_GRIDY$value)),]
df_R2_group2_factor3_GRIDY <- df_R2_group2_factor3_GRIDY[-which(is.infinite(df_R2_group2_factor3_GRIDY$value)),]
df_R2_group1_factor1_SCA_P <- df_R2_group1_factor1_SCA_P[-which(is.infinite(df_R2_group1_factor1_SCA_P$value)),]
df_R2_group1_factor2_SCA_P <- df_R2_group1_factor2_SCA_P[-which(is.infinite(df_R2_group1_factor2_SCA_P$value)),]
df_R2_group1_factor3_SCA_P <- df_R2_group1_factor3_SCA_P[-which(is.infinite(df_R2_group1_factor3_SCA_P$value)),]
df_R2_group2_factor1_SCA_P <- df_R2_group2_factor1_SCA_P[-which(is.infinite(df_R2_group2_factor1_SCA_P$value)),]
df_R2_group2_factor2_SCA_P <- df_R2_group2_factor2_SCA_P[-which(is.infinite(df_R2_group2_factor2_SCA_P$value)),]
df_R2_group2_factor3_SCA_P <- df_R2_group2_factor3_SCA_P[-which(is.infinite(df_R2_group2_factor3_SCA_P$value)),]
df_R2_group1_factor1_GICA <- df_R2_group1_factor1_GICA[-which(is.infinite(df_R2_group1_factor1_GICA$value)),]
df_R2_group1_factor2_GICA <- df_R2_group1_factor2_GICA[-which(is.infinite(df_R2_group1_factor2_GICA$value)),]
df_R2_group1_factor3_GICA <- df_R2_group1_factor3_GICA[-which(is.infinite(df_R2_group1_factor3_GICA$value)),]
df_R2_group2_factor1_GICA <- df_R2_group2_factor1_GICA[-which(is.infinite(df_R2_group2_factor1_GICA$value)),]
df_R2_group2_factor2_GICA <- df_R2_group2_factor2_GICA[-which(is.infinite(df_R2_group2_factor2_GICA$value)),]
df_R2_group2_factor3_GICA <- df_R2_group2_factor3_GICA[-which(is.infinite(df_R2_group2_factor3_GICA$value)),]
df_R2_group1_factor1_GRIDY$factor <- rep(1,dim(df_R2_group1_factor1_GRIDY)[1])
df_R2_group1_factor2_GRIDY$factor <- rep(2,dim(df_R2_group1_factor2_GRIDY)[1])
df_R2_group1_factor3_GRIDY$factor <- rep(1,dim(df_R2_group1_factor3_GRIDY)[1])
df_R2_group1_factor1_GRIDY$structure <- rep("Joint",dim(df_R2_group1_factor1_GRIDY)[1])
df_R2_group1_factor2_GRIDY$structure <- rep("Joint",dim(df_R2_group1_factor2_GRIDY)[1])
df_R2_group1_factor3_GRIDY$structure <- rep("Group Individual 1",dim(df_R2_group1_factor3_GRIDY)[1])
df_R2_group2_factor1_GRIDY$factor <- rep(1,dim(df_R2_group2_factor1_GRIDY)[1])
df_R2_group2_factor2_GRIDY$factor <- rep(2,dim(df_R2_group2_factor2_GRIDY)[1])
df_R2_group2_factor3_GRIDY$factor <- rep(1,dim(df_R2_group2_factor3_GRIDY)[1])
df_R2_group2_factor1_GRIDY$structure <- rep("Joint",dim(df_R2_group2_factor1_GRIDY)[1])
df_R2_group2_factor2_GRIDY$structure <- rep("Joint",dim(df_R2_group2_factor2_GRIDY)[1])
df_R2_group2_factor3_GRIDY$structure <- rep("Group Individual 2",dim(df_R2_group2_factor3_GRIDY)[1])
df_R2_group1_factor1_SCA_P$factor <- rep(1,dim(df_R2_group1_factor1_SCA_P)[1])
df_R2_group1_factor2_SCA_P$factor <- rep(2,dim(df_R2_group1_factor2_SCA_P)[1])
df_R2_group1_factor3_SCA_P$factor <- rep(1,dim(df_R2_group1_factor3_SCA_P)[1])
df_R2_group1_factor1_SCA_P$structure <- rep("Joint",dim(df_R2_group1_factor1_SCA_P)[1])
df_R2_group1_factor2_SCA_P$structure <- rep("Joint",dim(df_R2_group1_factor2_SCA_P)[1])
df_R2_group1_factor3_SCA_P$structure <- rep("Group Individual 1",dim(df_R2_group1_factor3_SCA_P)[1])
df_R2_group2_factor1_SCA_P$factor <- rep(1,dim(df_R2_group2_factor1_SCA_P)[1])
df_R2_group2_factor2_SCA_P$factor <- rep(2,dim(df_R2_group2_factor2_SCA_P)[1])
df_R2_group2_factor3_SCA_P$factor <- rep(1,dim(df_R2_group2_factor3_SCA_P)[1])
df_R2_group2_factor1_SCA_P$structure <- rep("Joint",dim(df_R2_group2_factor1_SCA_P)[1])
df_R2_group2_factor2_SCA_P$structure <- rep("Joint",dim(df_R2_group2_factor2_SCA_P)[1])
df_R2_group2_factor3_SCA_P$structure <- rep("Group Individual 2",dim(df_R2_group2_factor3_SCA_P)[1])
df_R2_group1_factor1_GICA$factor <- rep(1,dim(df_R2_group1_factor1_GICA)[1])
df_R2_group1_factor2_GICA$factor <- rep(2,dim(df_R2_group1_factor2_GICA)[1])
df_R2_group1_factor3_GICA$factor <- rep(1,dim(df_R2_group1_factor3_GICA)[1])
df_R2_group1_factor1_GICA$structure <- rep("Joint",dim(df_R2_group1_factor1_GICA)[1])
df_R2_group1_factor2_GICA$structure <- rep("Joint",dim(df_R2_group1_factor2_GICA)[1])
df_R2_group1_factor3_GICA$structure <- rep("Group Individual 1",dim(df_R2_group1_factor3_GICA)[1])
df_R2_group2_factor1_GICA$factor <- rep(1,dim(df_R2_group2_factor1_GICA)[1])
df_R2_group2_factor2_GICA$factor <- rep(2,dim(df_R2_group2_factor2_GICA)[1])
df_R2_group2_factor3_GICA$factor <- rep(1,dim(df_R2_group2_factor3_GICA)[1])
df_R2_group2_factor1_GICA$structure <- rep("Joint",dim(df_R2_group2_factor1_GICA)[1])
df_R2_group2_factor2_GICA$structure <- rep("Joint",dim(df_R2_group2_factor2_GICA)[1])
df_R2_group2_factor3_GICA$structure <- rep("Group Individual 2",dim(df_R2_group2_factor3_GICA)[1])
df_R2_group1_GRIDY <- rbind(df_R2_group1_factor1_GRIDY,df_R2_group1_factor2_GRIDY,df_R2_group1_factor3_GRIDY)
df_R2_group2_GRIDY <- rbind(df_R2_group2_factor1_GRIDY,df_R2_group2_factor2_GRIDY,df_R2_group2_factor3_GRIDY)
df_R2_group1_GRIDY$group <- rep(1,dim(df_R2_group1_GRIDY)[1])
df_R2_group2_GRIDY$group <- rep(2,dim(df_R2_group2_GRIDY)[1])
df_R2_group1_SCA_P <- rbind(df_R2_group1_factor1_SCA_P,df_R2_group1_factor2_SCA_P,df_R2_group1_factor3_SCA_P)
df_R2_group2_SCA_P <- rbind(df_R2_group2_factor1_SCA_P,df_R2_group2_factor2_SCA_P,df_R2_group2_factor3_SCA_P)
df_R2_group1_SCA_P$group <- rep(1,dim(df_R2_group1_SCA_P)[1])
df_R2_group2_SCA_P$group <- rep(2,dim(df_R2_group2_SCA_P)[1])
df_R2_group1_GICA <- rbind(df_R2_group1_factor1_GICA,df_R2_group1_factor2_GICA,df_R2_group1_factor3_GICA)
df_R2_group2_GICA <- rbind(df_R2_group2_factor1_GICA,df_R2_group2_factor2_GICA,df_R2_group2_factor3_GICA)
df_R2_group1_GICA$group <- rep(1,dim(df_R2_group1_GICA)[1])
df_R2_group2_GICA$group <- rep(2,dim(df_R2_group2_GICA)[1])
df_R2_GRIDY <- rbind(df_R2_group1_GRIDY,df_R2_group2_GRIDY)
df_R2_GRIDY$factor <- factor(df_R2_GRIDY$factor,levels=c(1,2),labels=c("Factor 1","Factor 2"))
df_R2_GRIDY$group <- factor(df_R2_GRIDY$group,levels=c(1,2),labels=c("Group 1","Group 2"))
df_R2_GRIDY$structure <- factor(df_R2_GRIDY$structure,levels=c("Joint","Group Individual 1","Group Individual 2"))
df_R2_GRIDY$method <- "GRIDY"
df_R2_SCA_P <- rbind(df_R2_group1_SCA_P,df_R2_group2_SCA_P)
df_R2_SCA_P$factor <- factor(df_R2_SCA_P$factor,levels=c(1,2),labels=c("Factor 1","Factor 2"))
df_R2_SCA_P$group <- factor(df_R2_SCA_P$group,levels=c(1,2),labels=c("Group 1","Group 2"))
df_R2_SCA_P$structure <- factor(df_R2_SCA_P$structure,levels=c("Joint","Group Individual 1","Group Individual 2"))
df_R2_SCA_P$method <- "SCA-P"
df_R2_GICA <- rbind(df_R2_group1_GICA,df_R2_group2_GICA)
df_R2_GICA$factor <- factor(df_R2_GICA$factor,levels=c(1,2),labels=c("Factor 1","Factor 2"))
df_R2_GICA$group <- factor(df_R2_GICA$group,levels=c(1,2),labels=c("Group 1","Group 2"))
df_R2_GICA$structure <- factor(df_R2_GICA$structure,levels=c("Joint","Group Individual 1","Group Individual 2"))
df_R2_GICA$method <- "GICA"
df_R2 <- rbind(df_R2_GRIDY,df_R2_SCA_P,df_R2_GICA)
df_R2$method <- factor(df_R2$method,levels=c("GRIDY","SCA-P","GICA"))
factor.labs <- c("Factor 1", "Factor 2")
names(factor.labs) <- c(1,2)
group.labs <- c("Group 1", "Group 2")
names(group.labs) <- c(1,2)
structure.labs <- c("Joint","Group Individual 1","Group Individual 2")
names(structure.labs) <- c("Joint","Group Individual 1","Group Individual 2")
method.labs <- c("GRIDY","SCA-P","GICA")
names(method.labs) <- c("GRIDY","SCA-P","GICA")
# -----------------------------------------------------------------------------#
# Saving Figure 6
# -----------------------------------------------------------------------------#
pdf(file = "./Figure6.pdf", width = 11.5, height = 10.5)
par(mar=c(0,0,0,0))
ggplot(df_R2,aes(x=variable,y=value,color=color,fill=color)) +
geom_boxplot(size=0.1,alpha=0.5) +
scale_color_manual(name="Network",
labels=c("dfm","fp","co","sm","cb","oc"),
breaks=c("red","blue","green","purple","orange","brown"),
values=c("red","blue","green","purple","orange","brown")) +
scale_fill_manual(name="Network",
labels=c("dfm","fp","co","sm","cb","oc"),
breaks=c("red","blue","green","purple","orange","brown"),
values=c("red","blue","green","purple","orange","brown")) +
scale_y_continuous(name=TeX("$\\R^2$")) +
theme(legend.position="bottom",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
guides(color = guide_legend(nrow = 1),fill = guide_legend(nrow = 1)) +
facet_grid(structure+factor~method+group,
labeller=labeller(method=method.labs,structure=structure.labs,
factor=factor.labs,group=group.labs))
dev.off()
#-----------------------------------------------------------------------------#
# Code for producing Figure 7 in Data application section
#-----------------------------------------------------------------------------#
# -----------------------------------------------------------------------------#
# Preparation
# -----------------------------------------------------------------------------#
# Packages required
library(ggplot2)
library(latex2exp)
library(ggpubr)
library(RColorBrewer)
library(reshape2)
# Load data from the previous step
load("./result/result_final_X.RData")
load("./result/result_final_GRIDY.RData")
load("./result/result_final_SCA_P.RData")
load("./result/result_final_GICA.RData")
# -----------------------------------------------------------------------------#
# Creating Figure 7
# -----------------------------------------------------------------------------#
# Making color labels for the ROIs:
color_table <- data.frame(color=c(rep("red",length(which(voxel_name_table$Net=="dfm"))),
rep("blue",length(which(voxel_name_table$Net=="fp"))),
rep("green",length(which(voxel_name_table$Net=="co"))),
rep("purple",length(which(voxel_name_table$Net=="sm"))),
rep("orange",length(which(voxel_name_table$Net=="cb"))),
rep("brown",length(which(voxel_name_table$Net=="oc")))),
ROI=c(which(voxel_name_table$Net=="dfm"),
which(voxel_name_table$Net=="fp"),
which(voxel_name_table$Net=="co"),
which(voxel_name_table$Net=="sm"),
which(voxel_name_table$Net=="cb"),
which(voxel_name_table$Net=="oc")))
color_table <- color_table[c(which(color_table$color=="red"),
which(color_table$color=="blue"),
which(color_table$color=="green"),
which(color_table$color=="purple"),
which(color_table$color=="orange"),
which(color_table$color=="brown")),]
# VAR construction
GRIDY_tr_joint <- GRIDY_tr_group  <-list()
GRIDY_error_joint <- GRIDY_error_group <- list()
for (kk in 1:(length(K1_idx)+length(K2_idx))){
T_k <- dim(X_scale_ext[[kk]])[2]
GRIDY_tr_joint[[kk]] <- SCA_PF2_Joint$B %*% GRIDY_YK$Psi_joint_hat[,,kk] %*% solve(t(SCA_PF2_Joint$B) %*% SCA_PF2_Joint$B) %*% t(SCA_PF2_Joint$B)
if (kk <= length(K1_idx)){
GRIDY_tr_group[[kk]] <- SCA_PF2_Group1$B %*% GRIDY_YK$Psi_indiv1_hat[,,kk] %*% solve(t(SCA_PF2_Group1$B) %*% SCA_PF2_Group1$B) %*% t(SCA_PF2_Group1$B)
}else{
GRIDY_tr_group[[kk]] <- SCA_PF2_Group2$B %*% GRIDY_YK$Psi_indiv2_hat[,,(kk-length(K1_idx))] %*% solve(t(SCA_PF2_Group2$B) %*% SCA_PF2_Group2$B) %*% t(SCA_PF2_Group2$B)
}
GRIDY_error_joint[[kk]] <- GRIDY_tr_joint[[kk]] %*% (diag(1,160) + (t(GRIDY_refitted$noise_refitted[[kk]]) %*% GRIDY_refitted$noise_refitted[[kk]]) / T_k) + SCA_PF2_Joint$B %*% GRIDY_YK$Eta_joint_hat[,,kk] %*% t(SCA_PF2_Joint$B)
if (kk <= length(K1_idx)){
GRIDY_error_group[[kk]] <- GRIDY_tr_group[[kk]] %*% (diag(1,160) + (t(GRIDY_refitted$noise_refitted[[kk]]) %*% GRIDY_refitted$noise_refitted[[kk]]) / T_k) + SCA_PF2_Group1$B %*% GRIDY_YK$Eta_indiv1_hat[,,kk] %*% t(SCA_PF2_Group1$B)
}else{
GRIDY_error_group[[kk]] <- GRIDY_tr_group[[kk]] %*% (diag(1,160) + (t(GRIDY_refitted$noise_refitted[[kk]]) %*% GRIDY_refitted$noise_refitted[[kk]]) / T_k) + SCA_PF2_Group2$B %*% GRIDY_YK$Eta_indiv2_hat[,,(kk-length(K1_idx))] %*% t(SCA_PF2_Group2$B)
}
}
GRIDY_tr_group1 <- array(0,dim=c(160,160))
GRIDY_tr_group2 <- array(0,dim=c(160,160))
GRIDY_error_group1 <- array(0,dim=c(160,160))
GRIDY_error_group2 <- array(0,dim=c(160,160))
for (kk in 1:(length(K1_idx)+length(K2_idx))){
if (kk <= length(K1_idx)){
GRIDY_tr_group1 <- GRIDY_tr_group1 + GRIDY_tr_joint[[kk]]/length(K1_idx) + GRIDY_tr_group[[kk]]/length(K1_idx)
GRIDY_error_group1 <- GRIDY_error_group1 + GRIDY_error_joint[[kk]]/length(K1_idx) + GRIDY_error_group[[kk]]/length(K1_idx)
}else{
GRIDY_tr_group2 <- GRIDY_tr_group2 + GRIDY_tr_joint[[kk]]/length(K2_idx) + GRIDY_tr_group[[kk]]/length(K2_idx)
GRIDY_error_group2 <- GRIDY_error_group2 + GRIDY_error_joint[[kk]]/length(K2_idx) + GRIDY_error_group[[kk]]/length(K2_idx)
}
}
# Plotting: This produces Figure 7
df_GRIDY_tr_group1 <- data.frame(value=as.vector(GRIDY_tr_group1[color_table$ROI,color_table$ROI]),
row = rep(color_table$ROI,each=1,160),
column = rep(color_table$ROI,each=160))
df_GRIDY_tr_group2 <- data.frame(value=as.vector(GRIDY_tr_group2[color_table$ROI,color_table$ROI]),
row = rep(color_table$ROI,each=1,160),
column = rep(color_table$ROI,each=160))
df_GRIDY_error_group1 <- data.frame(value=as.vector(GRIDY_error_group1[color_table$ROI,color_table$ROI]),
row = rep(color_table$ROI,each=1,160),
column = rep(color_table$ROI,each=160))
df_GRIDY_error_group2 <- data.frame(value=as.vector(GRIDY_error_group2[color_table$ROI,color_table$ROI]),
row = rep(color_table$ROI,each=1,160),
column = rep(color_table$ROI,each=160))
df_GRIDY_tr_group1$row <- factor(df_GRIDY_tr_group1$row,levels=unique(df_GRIDY_tr_group1$row))
df_GRIDY_tr_group2$row <- factor(df_GRIDY_tr_group2$row,levels=unique(df_GRIDY_tr_group2$row))
df_GRIDY_error_group1$row <- factor(df_GRIDY_error_group1$row,levels=unique(df_GRIDY_error_group1$row))
df_GRIDY_error_group2$row <- factor(df_GRIDY_error_group2$row,levels=unique(df_GRIDY_error_group2$row))
df_GRIDY_tr_group1$column <- factor(df_GRIDY_tr_group1$column,levels=unique(df_GRIDY_tr_group1$column))
df_GRIDY_tr_group2$column <- factor(df_GRIDY_tr_group2$column,levels=unique(df_GRIDY_tr_group2$column))
df_GRIDY_error_group1$column <- factor(df_GRIDY_error_group1$column,levels=unique(df_GRIDY_error_group1$column))
df_GRIDY_error_group2$column <- factor(df_GRIDY_error_group2$column,levels=unique(df_GRIDY_error_group2$column))
color_idx <- (color_table$color)[which(c(1:160)%%4==1)]
GRIDY_group1_tr <- ggplot(df_GRIDY_tr_group1,aes(x=as.factor(row),y=as.factor(column),fill=value))+
geom_tile()+
scale_fill_gradient2(name="Value",low=colorRampPalette(brewer.pal(3,"Set1"))(3)[2],
high=colorRampPalette(brewer.pal(3,"Set1"))(3)[1]) +
scale_y_discrete(name="ROI labels",
limits = levels(as.factor(df_GRIDY_tr_group1$row)),
breaks = unique(as.factor(df_GRIDY_tr_group1$row))[which(c(1:160)%%4==1)],
labels = voxel_name_table$ROI_label[color_table$ROI][which(c(1:160)%%4==1)])+
scale_x_discrete(name="ROI labels",
limits = levels(as.factor(df_GRIDY_tr_group1$column)),
breaks = unique(as.factor(df_GRIDY_tr_group1$column))[which(c(1:160)%%4==1)],
labels = voxel_name_table$ROI_label[color_table$ROI][which(c(1:160)%%4==1)])+
theme(legend.text=element_text(size=7),legend.position="bottom",
axis.text.x=element_text(size=8,angle=45,vjust=0.5,color=color_idx),
axis.text.y=element_text(size=8,color=color_idx))
GRIDY_group2_tr <- ggplot(df_GRIDY_tr_group2,aes(x=as.factor(row),y=as.factor(column),fill=value))+
geom_tile()+
scale_fill_gradient2(name="Value",low=colorRampPalette(brewer.pal(3,"Set1"))(3)[2],
high=colorRampPalette(brewer.pal(3,"Set1"))(3)[1]) +
scale_y_discrete(name="ROI labels",
limits = levels(as.factor(df_GRIDY_tr_group2$row)),
breaks = unique(as.factor(df_GRIDY_tr_group2$row))[which(c(1:160)%%4==1)],
labels = voxel_name_table$ROI_label[color_table$ROI][which(c(1:160)%%4==1)])+
scale_x_discrete(name="ROI labels",
limits = levels(as.factor(df_GRIDY_tr_group2$column)),
breaks = unique(as.factor(df_GRIDY_tr_group2$column))[which(c(1:160)%%4==1)],
labels = voxel_name_table$ROI_label[color_table$ROI][which(c(1:160)%%4==1)])+
theme(legend.text=element_text(size=7),legend.position="bottom",
axis.text.x=element_text(size=8,angle=45,vjust=0.5,color=color_idx),
axis.text.y=element_text(size=8,color=color_idx))
GRIDY_group1_error <- ggplot(df_GRIDY_error_group1,aes(x=as.factor(row),y=as.factor(column),fill=value))+
geom_tile()+
scale_fill_gradient2(name="Value",low=colorRampPalette(brewer.pal(3,"Set1"))(3)[2],
high=colorRampPalette(brewer.pal(3,"Set1"))(3)[1]) +
scale_y_discrete(name="ROI labels",
limits = levels(as.factor(df_GRIDY_error_group1$row)),
breaks = unique(as.factor(df_GRIDY_error_group1$row))[which(c(1:160)%%4==1)],
labels = voxel_name_table$ROI_label[color_table$ROI][which(c(1:160)%%4==1)])+
scale_x_discrete(name="ROI labels",
limits = levels(as.factor(df_GRIDY_error_group1$column)),
breaks = unique(as.factor(df_GRIDY_error_group1$column))[which(c(1:160)%%4==1)],
labels = voxel_name_table$ROI_label[color_table$ROI][which(c(1:160)%%4==1)])+
theme(legend.text=element_text(size=7),legend.position="bottom",
axis.text.x=element_text(size=8,angle=45,vjust=0.5,color=color_idx),
axis.text.y=element_text(size=8,color=color_idx))
GRIDY_group2_error <- ggplot(df_GRIDY_error_group2,aes(x=as.factor(row),y=as.factor(column),fill=value))+
geom_tile()+
scale_fill_gradient2(name="Value",low=colorRampPalette(brewer.pal(3,"Set1"))(3)[2],
high=colorRampPalette(brewer.pal(3,"Set1"))(3)[1]) +
scale_y_discrete(name="ROI labels",
limits = levels(as.factor(df_GRIDY_error_group2$row)),
breaks = unique(as.factor(df_GRIDY_error_group2$row))[which(c(1:160)%%4==1)],
labels = voxel_name_table$ROI_label[color_table$ROI][which(c(1:160)%%4==1)])+
scale_x_discrete(name="ROI labels",
limits = levels(as.factor(df_GRIDY_error_group2$column)),
breaks = unique(as.factor(df_GRIDY_error_group2$column))[which(c(1:160)%%4==1)],
labels = voxel_name_table$ROI_label[color_table$ROI][which(c(1:160)%%4==1)])+
theme(legend.text=element_text(size=7),legend.position="bottom",
axis.text.x=element_text(size=8,angle=45,vjust=0.5,color=color_idx),
axis.text.y=element_text(size=8,color=color_idx))
# -----------------------------------------------------------------------------#
# Saving Figure 7
# -----------------------------------------------------------------------------#
plot_tmp <- ggarrange(GRIDY_group1_tr,GRIDY_group2_tr,
GRIDY_group1_error,GRIDY_group2_error,
nrow=2,ncol=2,common.legend=TRUE,legend="bottom")
pdf(file = "./Figure7.pdf", width = 11.5, height = 10.5)
par(mar=c(0,0,0,0))
plot_tmp
dev.off()
#-----------------------------------------------------------------------------#
#   File name : Application.R
#
#   Project : "Group integrative dynamic factor models
#             with application to multiple subject brain connectivity"
#
#   Maintainer : Younghoon Kim
#
#   Date : Sep. 1st, 2024
#
#   Purpose : code for producing results in Data application section.
#             Code for plotting each figure is provided separately
#
#   R version 4.0.5 (2021-03-31)
#
#   Input data file : /Data_application/data/...-ccs_filt_noglobal_rois_dosenbach160.csv
#                     /Data_application/data/file_name_list.xlsx
#                     /Data_application/data/dos160_labels.xlsx
#
#   Output data file : /Data_application/result/result_intermediate.RData
#                      /Data_application/result/result_final_X.RData
#                      /Data_application/result/result_final_GRIDY.RData
#                      /Data_application/result/result_final_SCA_P.RData
#                      /Data_application/result/result_final_GICA.RData
#
#   Required R packages : readxl_1.4.1 , mvtnorm_1.2-5, and Matrix_1.5-1.
#-----------------------------------------------------------------------------#
# -----------------------------------------------------------------------------#
# Step 0: Set up
# -----------------------------------------------------------------------------#
# Load source code from the parent directory
source(paste0(dirname(getwd()),"/","Rotational_bootstrap.R"))
source(paste0(dirname(getwd()),"/","gica.R")) # For SCA and GICA
source(paste0(dirname(getwd()),"/","AJIVE_retrieve.R"))
source(paste0(dirname(getwd()),"/","library_application.R"))
# Load the list of the file names
file_name_table <- data.frame(read_excel("./data/file_name_list.xlsx", col_names=TRUE))
colnames(file_name_table) <- c("site_idx","file_idx","group_idx")
# Load the list of the variables of the ROIs
voxel_name_table <- data.frame(read_excel("./data/dos160_labels.xlsx", col_names=TRUE))
colnames(voxel_name_table) <- c("ROI_number","ROI_label","Network","Net","Name")
# -----------------------------------------------------------------------------#
# Step 1: Data preprocessing
# -----------------------------------------------------------------------------#
Tot_subject <- dim(file_name_table)[1]
G1_subject <- dim(file_name_table[which(file_name_table$group_idx==1),])[1]
G2_subject <- dim(file_name_table[which(file_name_table$group_idx==2),])[1]
list_scaled_X <- list()
for (kk in 1:Tot_subject){
file_name <- paste0(file_name_table[kk,2],"_ccs_filt_noglobal_rois_dosenbach160")
file_directory <- paste0("./data/",file_name,".csv")
data_entry <- read.csv(file_directory)
if (dim(data_entry)[2] == 160){
list_scaled_X[[kk]] <- t( scale(data_entry, center = TRUE, scale = TRUE) )
# impute 0 for the observations of the variables whose paths are zero.
list_scaled_X[[kk]][is.na(list_scaled_X[[kk]])] <- 0
list_scaled_X[[kk]] <- list_scaled_X[[kk]]
}else{
list_scaled_X[[kk]] <- t( scale(data_entry[,-dim(data_entry)[2]], center = TRUE, scale = TRUE) )
# impute 0 for the observations of the variables whose paths are zero.
list_scaled_X[[kk]][is.na(list_scaled_X[[kk]])] <- 0
list_scaled_X[[kk]] <- list_scaled_X[[kk]]
}
}
# -----------------------------------------------------------------------------#
# Step 2: Rank selection
# -----------------------------------------------------------------------------#
# rotational bootstrap:
r_hat <- vector("numeric",length(Tot_subject))
d <- 160
length(Tot_subject)
Tot_subject
