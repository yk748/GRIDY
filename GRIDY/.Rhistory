rm(list = ls())
# Packages required
library("readxl");
library("mvtnorm");
library("Matrix");
library("combinat");
library("latex2exp");
library("ggplot2");
library("patchwork");
library("reshape2");
library("gridExtra");
library("ggpubr");
library("RColorBrewer");
library("forcats");
library("ggdendro");
library("tidyr");
library("matrixcalc");
library("lmtest");
library("cowplot");
library("grid");
# For AJIVE:
# devtools::install_github("idc9/r_jive")
library(ajive)
# For SCA:
library(multiway)
# For miscellaneous functions
source("library_application.R")
getwd()
getwd("D:/High-dimensional time series/multifac\GRIDY/code")
getwd("D:/High-dimensional time series/multifac/GRIDY/code")
getwd()
setwd("D:/High-dimensional time series/multifac/GRIDY/cdoe")
setwd("D:/High-dimensional time series/multifac/GRIDY/code")
# For miscellaneous functions
source("library_application.R")
file_name_table <- data.frame(read_excel("file_name_list.xlsx", col_names=TRUE))
plot.ts(rnorm(100))
load("D:/High-dimensional time series/multifac/GRIDY/GRIDY/data/Data_application.RData")
# Packages required
library(readxl)
library(mvtnorm)
library(Matrix)
library(combinat)
library(ggplot2)
library(patchwork)
library(reshape2)
library(latex2exp)
library(ggpubr)
library(RColorBrewer)
library(cowplot)
library(grid)
# -----------------------------------------------------------------------------#
# Making color labels for the figures:
# -----------------------------------------------------------------------------#
# Label setup:
color_table <- data.frame(color=c(rep("red",length(which(voxel_name_table$Net=="dfm"))),
rep("blue",length(which(voxel_name_table$Net=="fp"))),
rep("green",length(which(voxel_name_table$Net=="co"))),
rep("purple",length(which(voxel_name_table$Net=="sm"))),
rep("orange",length(which(voxel_name_table$Net=="cb"))),
rep("brown",length(which(voxel_name_table$Net=="oc")))),
ROI=c(which(voxel_name_table$Net=="dfm"),
which(voxel_name_table$Net=="fp"),
which(voxel_name_table$Net=="co"),
which(voxel_name_table$Net=="sm"),
which(voxel_name_table$Net=="cb"),
which(voxel_name_table$Net=="oc")))
color_table <- color_table[c(which(color_table$color=="red"),
which(color_table$color=="blue"),
which(color_table$color=="green"),
which(color_table$color=="purple"),
which(color_table$color=="orange"),
which(color_table$color=="brown")),]
# -----------------------------------------------------------------------------#
# Code for Figure 8 starts here:
# -----------------------------------------------------------------------------#
# Covariance of factors
Cov_joint_GRIDY <- Cov_joint_SCA_P <- Cov_joint_GICA <- array(NA,dim=c(2,2,(length(K1_idx) + length(K2_idx))))
Cov_group1_GRIDY <- Cov_group1_SCA_P  <- Cov_group1_GICA <- vector("numeric",length(K1_idx))
Cov_group2_GRIDY <- Cov_group2_SCA_P  <- Cov_group2_GICA <- vector("numeric",length(K2_idx))
for (kk in 1:(length(K1_idx) + length(K2_idx))){
T_k <- dim(GRIDY_refitted$factor_joint[[kk]])[1]
Cov_joint_GRIDY[,,kk] <- t(scale(GRIDY_refitted$factor_joint[[kk]],center=TRUE,scale=FALSE)) %*% scale(GRIDY_refitted$factor_joint[[kk]],center=TRUE,scale=FALSE) / T_k
Cov_joint_SCA_P[,,kk] <- t(scale(SCA_P_refitted$factor_joint[[kk]],center=TRUE,scale=FALSE)) %*% scale(SCA_P_refitted$factor_joint[[kk]],center=TRUE,scale=FALSE) / T_k
Cov_joint_GICA[,,kk] <- t(scale(GICA_refitted$factor_joint[[kk]],center=TRUE,scale=FALSE)) %*% scale(GICA_refitted$factor_joint[[kk]],center=TRUE,scale=FALSE) / T_k
if (kk <= length(K1_idx)){
Cov_group1_GRIDY[kk] <- t(scale(GRIDY_refitted$factor_group1[[kk]],center=TRUE,scale=FALSE)) %*% scale(GRIDY_refitted$factor_group1[[kk]],center=TRUE,scale=FALSE) / T_k
Cov_group1_SCA_P[kk] <- t(scale(SCA_P_refitted$factor_group1[[kk]],center=TRUE,scale=FALSE)) %*% scale(SCA_P_refitted$factor_group1[[kk]],center=TRUE,scale=FALSE) / T_k
Cov_group1_GICA[kk] <- t(scale(GICA_refitted$factor_group1[[kk]],center=TRUE,scale=FALSE)) %*% scale(GICA_refitted$factor_group1[[kk]],center=TRUE,scale=FALSE) / T_k
}else{
Cov_group2_GRIDY[(kk-length(K1_idx))] <- t(scale(GRIDY_refitted$factor_group2[[(kk-length(K1_idx))]],center=TRUE,scale=FALSE)) %*% scale(GRIDY_refitted$factor_group2[[(kk-length(K1_idx))]],center=TRUE,scale=FALSE) / T_k
Cov_group2_SCA_P[(kk-length(K1_idx))] <- t(scale(SCA_P_refitted$factor_group2[[(kk-length(K1_idx))]],center=TRUE,scale=FALSE)) %*% scale(SCA_P_refitted$factor_group2[[(kk-length(K1_idx))]],center=TRUE,scale=FALSE) / T_k
Cov_group2_GICA[(kk-length(K1_idx))] <- t(scale(GICA_refitted$factor_group2[[(kk-length(K1_idx))]],center=TRUE,scale=FALSE)) %*% scale(GICA_refitted$factor_group2[[(kk-length(K1_idx))]],center=TRUE,scale=FALSE) / T_k
}
}
GRIDY_Cov_group1_joint <- data.frame(value = as.vector(Cov_joint_GRIDY[,,K1_idx]),
index = rep(c("(1,1)","(2,1)","(1,2)","(2,2)"),length(K1_idx)),
factor = rep(1,length(K1_idx)),
method = rep("GRIDY",length(K1_idx)),
structure = rep("Joint",length(K1_idx)))
GRIDY_Cov_group2_joint <- data.frame(value = as.vector(Cov_joint_GRIDY[,,K2_idx]),
index = rep(c("(1,1)","(2,1)","(1,2)","(2,2)"),length(K2_idx)),
factor = rep(2,length(K2_idx)),
method = rep("GRIDY",length(K2_idx)),
structure = rep("Joint",length(K2_idx)))
GRIDY_Cov_group1_individual <- data.frame(value = Cov_group1_GRIDY,
index = rep(c("(1,1)"),length(K1_idx)),
factor = rep(1,length(K1_idx)),
method = rep("GRIDY",length(K1_idx)),
structure = rep("Group Individual 1",length(K1_idx)))
GRIDY_Cov_group2_individual <- data.frame(value = Cov_group2_GRIDY,
index = rep(c("(1,1)"),length(K2_idx)),
factor = rep(1,length(K2_idx)),
method = rep("GRIDY",length(K2_idx)),
structure = rep("Group Individual 2",length(K2_idx)))
SCA_P_Cov_group1_joint <- data.frame(value = as.vector(Cov_joint_SCA_P[,,K1_idx]),
index = rep(c("(1,1)","(2,1)","(1,2)","(2,2)"),length(K1_idx)),
factor = rep(1,length(K1_idx)),
method = rep("SCA-P",length(K1_idx)),
structure = rep("Joint",length(K1_idx)))
SCA_P_Cov_group2_joint <- data.frame(value = as.vector(Cov_joint_SCA_P[,,K2_idx]),
index = rep(c("(1,1)","(2,1)","(1,2)","(2,2)"),length(K2_idx)),
factor = rep(2,length(K2_idx)),
method = rep("SCA-P",length(K2_idx)),
structure = rep("Joint",length(K2_idx)))
SCA_P_Cov_group1_individual <- data.frame(value = Cov_group1_SCA_P,
index = rep(c("(1,1)"),length(K1_idx)),
factor = rep(1,length(K1_idx)),
method = rep("SCA-P",length(K1_idx)),
structure = rep("Group Individual 1",length(K1_idx)))
SCA_P_Cov_group2_individual <- data.frame(value = Cov_group2_SCA_P,
index = rep(c("(1,1)"),length(K2_idx)),
factor = rep(1,length(K2_idx)),
method = rep("SCA-P",length(K2_idx)),
structure = rep("Group Individual 2",length(K2_idx)))
GICA_Cov_group1_joint <- data.frame(value = as.vector(Cov_joint_GICA[,,K1_idx]),
index = rep(c("(1,1)","(2,1)","(1,2)","(2,2)"),length(K1_idx)),
factor = rep(1,length(K1_idx)),
method = rep("GICA",length(K1_idx)),
structure = rep("Joint",length(K1_idx)))
GICA_Cov_group2_joint <- data.frame(value = as.vector(Cov_joint_GICA[,,K2_idx]),
index = rep(c("(1,1)","(2,1)","(1,2)","(2,2)"),length(K2_idx)),
factor = rep(2,length(K2_idx)),
method = rep("GICA",length(K2_idx)),
structure = rep("Joint",length(K2_idx)))
GICA_Cov_group1_individual <- data.frame(value = Cov_group1_GICA,
index = rep(c("(1,1)"),length(K1_idx)),
factor = rep(1,length(K1_idx)),
method = rep("GICA",length(K1_idx)),
structure = rep("Group Individual 1",length(K1_idx)))
GICA_Cov_group2_individual <- data.frame(value = Cov_group2_GICA,
index = rep(c("(1,1)"),length(K2_idx)),
factor = rep(1,length(K2_idx)),
method = rep("GICA",length(K2_idx)),
structure = rep("Group Individual 2",length(K2_idx)))
df_Cov <- rbind(GRIDY_Cov_group1_joint,GRIDY_Cov_group2_joint,
GRIDY_Cov_group1_individual,GRIDY_Cov_group2_individual,
SCA_P_Cov_group1_joint,SCA_P_Cov_group2_joint,
SCA_P_Cov_group1_individual,SCA_P_Cov_group2_individual,
GICA_Cov_group1_joint,GICA_Cov_group2_joint,
GICA_Cov_group1_individual,GICA_Cov_group2_individual)
df_Cov$structure <- factor(df_Cov$structure,levels=c("Joint","Group Individual 1","Group Individual 2"))
df_Cov$method <- factor(df_Cov$method,levels=c("GRIDY","SCA-P","GICA"))
df_Cov$index <- factor(df_Cov$index,levels=c("(1,1)","(2,1)","(1,2)","(2,2)"))
df_Cov$factor <- factor(df_Cov$factor,levels=c(1,2),labels=c("Factor 1","Factor 2"))
str.labs <- c("Joint","Group Individual 1","Group Individual 2")
names(str.labs) <- c("Joint","Group Individual 1","Group Individual 2")
method.labs <- c("Joint","Group Individual 1","Group Individual 2")
names(method.labs) <- c("Joint","Group Individual 1","Group Individual 2")
factor.labs <- c("Factor 1","Factor 2")
names(factor.labs) <- c("Factor 1","Factor 2")
# Transition matrices
GRIDY_Psi_group1_joint <- data.frame(value = as.vector(GRIDY_YK$Psi_joint_hat[,,K1_idx]),
index = rep(c("(1,1)","(2,1)","(1,2)","(2,2)"),length(K1_idx)),
factor = rep(1,length(K1_idx)),
method = rep("GRIDY",length(K1_idx)),
structure = rep("Joint",length(K1_idx)))
GRIDY_Psi_group2_joint <- data.frame(value = as.vector(GRIDY_YK$Psi_joint_hat[,,K2_idx]),
index = rep(c("(1,1)","(2,1)","(1,2)","(2,2)"),length(K2_idx)),
factor = rep(2,length(K2_idx)),
method = rep("GRIDY",length(K2_idx)),
structure = rep("Joint",length(K2_idx)))
GRIDY_Psi_group1_individual <- data.frame(value = as.vector(GRIDY_YK$Psi_indiv1_hat[,,K1_idx]),
index = rep(c("(1,1)"),length(K1_idx)),
factor = rep(1,length(K1_idx)),
method = rep("GRIDY",length(K1_idx)),
structure = rep("Group Individual 1",length(K1_idx)))
GRIDY_Psi_group2_individual <- data.frame(value = as.vector(GRIDY_YK$Psi_indiv2_hat[,,1:length(K2_idx)]),
index = rep(c("(1,1)"),length(K2_idx)),
factor = rep(1,length(K2_idx)),
method = rep("GRIDY",length(K2_idx)),
structure = rep("Group Individual 2",length(K2_idx)))
SCA_P_Psi_group1_joint <- data.frame(value = as.vector(SCA_P_YK$Psi_joint_hat[,,K1_idx]),
index = rep(c("(1,1)","(2,1)","(1,2)","(2,2)"),length(K1_idx)),
factor = rep(1,length(K1_idx)),
method = rep("SCA-P",length(K1_idx)),
structure = rep("Joint",length(K1_idx)))
SCA_P_Psi_group2_joint <- data.frame(value = as.vector(SCA_P_YK$Psi_joint_hat[,,K2_idx]),
index = rep(c("(1,1)","(2,1)","(1,2)","(2,2)"),length(K2_idx)),
factor = rep(2,length(K2_idx)),
method = rep("SCA-P",length(K2_idx)),
structure = rep("Joint",length(K2_idx)))
SCA_P_Psi_group1_individual <- data.frame(value = as.vector(SCA_P_YK$Psi_indiv1_hat[,,K1_idx]),
index = rep(c("(1,1)"),length(K1_idx)),
factor = rep(1,length(K1_idx)),
method = rep("SCA-P",length(K1_idx)),
structure = rep("Group Individual 1",length(K1_idx)))
SCA_P_Psi_group2_individual <- data.frame(value = as.vector(SCA_P_YK$Psi_indiv2_hat[,,1:length(K2_idx)]),
index = rep(c("(1,1)"),length(K2_idx)),
factor = rep(1,length(K2_idx)),
method = rep("SCA-P",length(K2_idx)),
structure = rep("Group Individual 2",length(K2_idx)))
GICA_Psi_group1_joint <- data.frame(value = as.vector(GICA_YK$Psi_joint_hat[,,K1_idx]),
index = rep(c("(1,1)","(2,1)","(1,2)","(2,2)"),length(K1_idx)),
factor = rep(1,length(K1_idx)),
method = rep("GICA",length(K1_idx)),
structure = rep("Joint",length(K1_idx)))
GICA_Psi_group2_joint <- data.frame(value = as.vector(GICA_YK$Psi_joint_hat[,,K2_idx]),
index = rep(c("(1,1)","(2,1)","(1,2)","(2,2)"),length(K2_idx)),
factor = rep(2,length(K2_idx)),
method = rep("GICA",length(K2_idx)),
structure = rep("Joint",length(K2_idx)))
GICA_Psi_group1_individual <- data.frame(value = as.vector(GICA_YK$Psi_indiv1_hat[,,K1_idx]),
index = rep(c("(1,1)"),length(K1_idx)),
factor = rep(1,length(K1_idx)),
method = rep("GICA",length(K1_idx)),
structure = rep("Group Individual 1",length(K1_idx)))
GICA_Psi_group2_individual <- data.frame(value = as.vector(GICA_YK$Psi_indiv2_hat[,,1:length(K2_idx)]),
index = rep(c("(1,1)"),length(K2_idx)),
factor = rep(1,length(K2_idx)),
method = rep("GICA",length(K2_idx)),
structure = rep("Group Individual 2",length(K2_idx)))
df_Psi <- rbind(GRIDY_Psi_group1_joint,GRIDY_Psi_group2_joint,
GRIDY_Psi_group1_individual,GRIDY_Psi_group2_individual,
SCA_P_Psi_group1_joint,SCA_P_Psi_group2_joint,
SCA_P_Psi_group1_individual,SCA_P_Psi_group2_individual,
GICA_Psi_group1_joint,GICA_Psi_group2_joint,
GICA_Psi_group1_individual,GICA_Psi_group2_individual)
df_Psi$structure <- factor(df_Psi$structure,levels=c("Joint","Group Individual 1","Group Individual 2"))
df_Psi$method <- factor(df_Psi$method,levels=c("GRIDY","SCA-P","GICA"))
df_Psi$index <- factor(df_Psi$index,levels=c("(1,1)","(2,1)","(1,2)","(2,2)"))
df_Psi$factor <- factor(df_Psi$factor,levels=c(1,2),labels=c("Factor 1","Factor 2"))
str.labs <- c("Joint","Group Individual 1","Group Individual 2")
names(str.labs) <- c("Joint","Group Individual 1","Group Individual 2")
method.labs <- c("Joint","Group Individual 1","Group Individual 2")
names(method.labs) <- c("Joint","Group Individual 1","Group Individual 2")
factor.labs <- c("Factor 1","Factor 2")
names(factor.labs) <- c("Factor 1","Factor 2")
par(mar=c(0,0,0,0))
ggarrange(
ggplot(df_Cov,aes(y=value,x=index,fill=factor(index))) +
geom_boxplot(cex=0.1) +
scale_fill_manual(name="",values=colorRampPalette(brewer.pal(4,"Set1"))(4)) +
scale_y_continuous(name="Value") +
scale_x_discrete(name="Entries") +
ggtitle("Covariance Matrices of Factors") +
theme(legend.position="none") +
facet_grid(structure+factor~method,
scales = "free",
labeller=labeller(structure=str.labs,method=method.labs,factor=factor.labs)),
ggplot(df_Psi,aes(y=value,x=index,fill=factor(index))) +
geom_boxplot(cex=0.1) +
scale_fill_manual(name="",values=colorRampPalette(brewer.pal(4,"Set1"))(4)) +
scale_y_continuous(name="Value") +
scale_x_discrete(name="Entries") +
ggtitle("Transition Matrices of Factors") +
theme(legend.position="none") +
facet_grid(structure+factor~method,
scales = "free",
labeller=labeller(structure=str.labs,method=method.labs,factor=factor.labs)),
ncol=2,common.legend=TRUE,legend="bottom")
getwd()
pdf(file = "./Figure8.pdf", width = 11.5, height = 10.5)
par(mar=c(0,0,0,0))
ggarrange(
ggplot(df_Cov,aes(y=value,x=index,fill=factor(index))) +
geom_boxplot(cex=0.1) +
scale_fill_manual(name="",values=colorRampPalette(brewer.pal(4,"Set1"))(4)) +
scale_y_continuous(name="Value") +
scale_x_discrete(name="Entries") +
ggtitle("Covariance Matrices of Factors") +
theme(legend.position="none") +
facet_grid(structure+factor~method,
scales = "free",
labeller=labeller(structure=str.labs,method=method.labs,factor=factor.labs)),
ggplot(df_Psi,aes(y=value,x=index,fill=factor(index))) +
geom_boxplot(cex=0.1) +
scale_fill_manual(name="",values=colorRampPalette(brewer.pal(4,"Set1"))(4)) +
scale_y_continuous(name="Value") +
scale_x_discrete(name="Entries") +
ggtitle("Transition Matrices of Factors") +
theme(legend.position="none") +
facet_grid(structure+factor~method,
scales = "free",
labeller=labeller(structure=str.labs,method=method.labs,factor=factor.labs)),
ncol=2,common.legend=TRUE,legend="bottom")
dev.off()
